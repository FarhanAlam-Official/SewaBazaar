// Comprehensive E2E Tests for Provider Dashboard\n// Tests the complete provider workflow from login to service management\n\ndescribe('Provider Dashboard - Complete Workflow', () => {\n  beforeEach(() => {\n    // Reset test data before each test\n    cy.resetTestData()\n    \n    // Set up API interceptors\n    cy.intercept('GET', '/api/auth/me/', { fixture: 'provider.json' }).as('getProfile')\n    cy.intercept('GET', '/api/notifications/', { fixture: 'notifications.json' }).as('getNotifications')\n    cy.intercept('GET', '/api/services/', { fixture: 'services.json' }).as('getServices')\n    cy.intercept('GET', '/api/bookings/', { fixture: 'bookings.json' }).as('getBookings')\n    cy.intercept('GET', '/api/analytics/dashboard/', { fixture: 'analytics.json' }).as('getAnalytics')\n    \n    // Mock successful API responses for mutations\n    cy.intercept('POST', '/api/services/', { statusCode: 201, body: { id: 1, title: 'New Service' } }).as('createService')\n    cy.intercept('PATCH', '/api/services/*', { statusCode: 200, body: { success: true } }).as('updateService')\n    cy.intercept('DELETE', '/api/services/*', { statusCode: 204 }).as('deleteService')\n    cy.intercept('PATCH', '/api/notifications/*', { statusCode: 200, body: { success: true } }).as('markNotificationRead')\n  })\n  \n  descri