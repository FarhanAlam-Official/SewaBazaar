# Generated by Django 4.2.10 on 2025-08-31 08:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('services', '0003_servicereview_alter_serviceimage_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('bookings', '0005_booking_express_fee_booking_is_express_booking_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProviderAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('break_start', models.TimeField(blank=True, help_text='Lunch/break start time', null=True)),
                ('break_end', models.TimeField(blank=True, help_text='Lunch/break end time', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Provider Availability',
                'verbose_name_plural': 'Provider Availabilities',
                'ordering': ['weekday', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='ServiceTimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], help_text='Day of week (0=Monday, 6=Sunday)')),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('duration_hours', models.DecimalField(decimal_places=2, default=1.0, help_text='How long this service typically takes', max_digits=4)),
                ('is_peak_time', models.BooleanField(default=False, help_text='Peak hours with higher pricing')),
                ('peak_price_multiplier', models.DecimalField(decimal_places=2, default=1.0, help_text='Price multiplier for peak times (e.g., 1.5 for 50% increase)', max_digits=4)),
                ('is_active', models.BooleanField(default=True)),
                ('max_bookings_per_slot', models.PositiveIntegerField(default=1, help_text='How many customers can book this time slot')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Service Time Slot',
                'verbose_name_plural': 'Service Time Slots',
                'ordering': ['day_of_week', 'start_time'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='bookingslot',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='bookingslot',
            name='created_from_availability',
            field=models.BooleanField(default=True, help_text='Generated from provider availability vs manually created'),
        ),
        migrations.AddField(
            model_name='bookingslot',
            name='provider',
            field=models.ForeignKey(blank=True, default=1, limit_choices_to={'role': 'provider'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='booking_slots', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='bookingslot',
            name='base_price_override',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Override service price for this specific slot', max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='bookingslot',
            name='is_rush',
            field=models.BooleanField(default=False, help_text='Express slot with premium pricing'),
        ),
        migrations.AlterField(
            model_name='bookingslot',
            name='provider_note',
            field=models.TextField(blank=True, help_text='Special instructions from provider', null=True),
        ),
        migrations.AlterField(
            model_name='bookingslot',
            name='rush_fee_percentage',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Additional fee percentage (e.g., 50.00 for 50%)', max_digits=5),
        ),
        migrations.AlterField(
            model_name='bookingslot',
            name='slot_type',
            field=models.CharField(choices=[('standard', 'Standard'), ('express', 'Express'), ('premium', 'Premium'), ('urgent', 'Urgent')], default='standard', max_length=20),
        ),
        migrations.AlterUniqueTogether(
            name='bookingslot',
            unique_together={('service', 'provider', 'date', 'start_time')},
        ),
        migrations.AddIndex(
            model_name='bookingslot',
            index=models.Index(fields=['date', 'is_available'], name='bookings_bo_date_149674_idx'),
        ),
        migrations.AddIndex(
            model_name='bookingslot',
            index=models.Index(fields=['provider', 'date'], name='bookings_bo_provide_9b5864_idx'),
        ),
        migrations.AddIndex(
            model_name='bookingslot',
            index=models.Index(fields=['service', 'date'], name='bookings_bo_service_a4c134_idx'),
        ),
        migrations.AddField(
            model_name='servicetimeslot',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='services.service'),
        ),
        migrations.AddField(
            model_name='provideravailability',
            name='provider',
            field=models.ForeignKey(limit_choices_to={'role': 'provider'}, on_delete=django.db.models.deletion.CASCADE, related_name='availability_schedule', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='servicetimeslot',
            unique_together={('service', 'day_of_week', 'start_time')},
        ),
        migrations.AlterUniqueTogether(
            name='provideravailability',
            unique_together={('provider', 'weekday', 'start_time')},
        ),
    ]
