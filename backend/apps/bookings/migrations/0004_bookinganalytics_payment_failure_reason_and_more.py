# Generated by Django 4.2.10 on 2025-08-29 15:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('bookings', '0003_remove_bookingslot_unique_booking_slot_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BookingAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_bookings', models.PositiveIntegerField(default=0)),
                ('confirmed_bookings', models.PositiveIntegerField(default=0)),
                ('completed_bookings', models.PositiveIntegerField(default=0)),
                ('cancelled_bookings', models.PositiveIntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('average_booking_value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('active_providers', models.PositiveIntegerField(default=0)),
                ('new_providers', models.PositiveIntegerField(default=0)),
                ('new_customers', models.PositiveIntegerField(default=0)),
                ('returning_customers', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Booking Analytics',
                'verbose_name_plural': 'Booking Analytics',
                'ordering': ['-date'],
            },
        ),
        migrations.AddField(
            model_name='payment',
            name='failure_reason',
            field=models.TextField(blank=True, help_text='Reason for payment failure', null=True),
        ),
        migrations.AddField(
            model_name='payment',
            name='last_payment_attempt',
            field=models.DateTimeField(auto_now=True, help_text='Last payment attempt timestamp'),
        ),
        migrations.AddField(
            model_name='payment',
            name='payment_attempts',
            field=models.PositiveIntegerField(default=1, help_text='Number of payment attempts'),
        ),
        migrations.AddField(
            model_name='payment',
            name='refund_amount',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Amount refunded', max_digits=10),
        ),
        migrations.AddField(
            model_name='payment',
            name='refund_reason',
            field=models.TextField(blank=True, help_text='Reason for refund', null=True),
        ),
        migrations.AddField(
            model_name='payment',
            name='refunded_at',
            field=models.DateTimeField(blank=True, help_text='Refund timestamp', null=True),
        ),
        migrations.AddField(
            model_name='paymentmethod',
            name='description',
            field=models.TextField(blank=True, help_text='Payment method description', null=True),
        ),
        migrations.AddField(
            model_name='paymentmethod',
            name='is_featured',
            field=models.BooleanField(default=False, help_text='Featured payment method'),
        ),
        migrations.AddField(
            model_name='paymentmethod',
            name='max_amount',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Maximum transaction amount', max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='paymentmethod',
            name='min_amount',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Minimum transaction amount', max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='paymentmethod',
            name='priority_order',
            field=models.PositiveIntegerField(default=0, help_text='Display order priority'),
        ),
        migrations.AddField(
            model_name='paymentmethod',
            name='supported_currencies',
            field=models.JSONField(blank=True, default=list, help_text='Supported currencies'),
        ),
        migrations.CreateModel(
            name='CustomerFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], help_text='Overall service rating')),
                ('punctuality_rating', models.IntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], help_text='Provider punctuality')),
                ('quality_rating', models.IntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], help_text='Service quality')),
                ('communication_rating', models.IntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], help_text='Communication quality')),
                ('value_rating', models.IntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], help_text='Value for money')),
                ('comment', models.TextField(help_text='Detailed feedback comment')),
                ('would_recommend', models.BooleanField(default=True, help_text='Would recommend to others')),
                ('is_anonymous', models.BooleanField(default=False, help_text='Anonymous feedback')),
                ('is_verified_booking', models.BooleanField(default=True, help_text='Feedback from verified booking')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer_feedback', to='bookings.booking')),
            ],
            options={
                'verbose_name': 'Customer Feedback',
                'verbose_name_plural': 'Customer Feedback',
                'ordering': ['-created_at'],
            },
        ),
    ]
