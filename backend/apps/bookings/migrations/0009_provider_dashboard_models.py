# Generated by Django 4.2.10 on 2025-09-18 15:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('bookings', '0008_add_voucher_integration'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProviderSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date for this schedule entry')),
                ('start_time', models.TimeField(blank=True, help_text='Start time (null for all-day entries)', null=True)),
                ('end_time', models.TimeField(blank=True, help_text='End time (null for all-day entries)', null=True)),
                ('is_all_day', models.BooleanField(default=False, help_text='Whether this is an all-day schedule entry')),
                ('schedule_type', models.CharField(choices=[('available', 'Available'), ('blocked', 'Blocked'), ('vacation', 'Vacation'), ('maintenance', 'Maintenance')], default='available', help_text='Type of schedule entry', max_length=20)),
                ('max_bookings', models.PositiveIntegerField(default=1, help_text='Maximum bookings allowed during this time')),
                ('title', models.CharField(blank=True, help_text='Title for this schedule entry', max_length=200, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this schedule entry', null=True)),
                ('is_recurring', models.BooleanField(default=False, help_text='Whether this schedule repeats')),
                ('recurring_pattern', models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], help_text='Pattern for recurring schedule', max_length=20, null=True)),
                ('recurring_until', models.DateField(blank=True, help_text='End date for recurring schedule', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('provider', models.ForeignKey(help_text='Provider this schedule belongs to', limit_choices_to={'role': 'provider'}, on_delete=django.db.models.deletion.CASCADE, related_name='custom_schedule', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Provider Schedule',
                'verbose_name_plural': 'Provider Schedules',
                'ordering': ['date', 'start_time'],
                'indexes': [models.Index(fields=['provider', 'date'], name='bookings_pr_provide_ab0d92_idx'), models.Index(fields=['date', 'schedule_type'], name='bookings_pr_date_51b7f1_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProviderEarnings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gross_amount', models.DecimalField(decimal_places=2, help_text='Total booking amount before fees', max_digits=10)),
                ('platform_fee_percentage', models.DecimalField(decimal_places=2, default=10.0, help_text='Platform fee percentage applied', max_digits=5)),
                ('platform_fee', models.DecimalField(decimal_places=2, help_text='Platform fee amount deducted', max_digits=10)),
                ('net_amount', models.DecimalField(decimal_places=2, help_text='Net amount payable to provider', max_digits=10)),
                ('payout_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('paid', 'Paid'), ('failed', 'Failed'), ('disputed', 'Disputed')], default='pending', help_text='Status of payout to provider', max_length=20)),
                ('payout_date', models.DateTimeField(blank=True, help_text='When payout was processed', null=True)),
                ('payout_reference', models.CharField(blank=True, help_text='Bank transfer or payment reference', max_length=100, null=True)),
                ('payout_method', models.CharField(choices=[('bank_transfer', 'Bank Transfer'), ('digital_wallet', 'Digital Wallet'), ('check', 'Check')], default='bank_transfer', help_text='Method used for payout', max_length=50)),
                ('earned_at', models.DateTimeField(auto_now_add=True, help_text='When this earning was recorded')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this earning', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.OneToOneField(help_text='Booking this earning is associated with', on_delete=django.db.models.deletion.CASCADE, related_name='provider_earnings', to='bookings.booking')),
                ('provider', models.ForeignKey(help_text='Provider who earned this amount', limit_choices_to={'role': 'provider'}, on_delete=django.db.models.deletion.CASCADE, related_name='earnings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Provider Earnings',
                'verbose_name_plural': 'Provider Earnings',
                'ordering': ['-earned_at'],
                'indexes': [models.Index(fields=['provider', 'payout_status'], name='bookings_pr_provide_8a23c8_idx'), models.Index(fields=['payout_date'], name='bookings_pr_payout__9e0517_idx'), models.Index(fields=['earned_at'], name='bookings_pr_earned__624208_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProviderCustomerRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_bookings', models.PositiveIntegerField(default=0, help_text='Total bookings between this provider and customer')),
                ('total_spent', models.DecimalField(decimal_places=2, default=0, help_text='Total amount spent by customer with this provider', max_digits=10)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0, help_text='Average rating given by customer to provider', max_digits=3)),
                ('is_favorite_customer', models.BooleanField(default=False, help_text='Whether provider marked this as favorite customer')),
                ('is_blocked', models.BooleanField(default=False, help_text='Whether provider blocked this customer')),
                ('first_booking_date', models.DateTimeField(blank=True, help_text='Date of first booking between them', null=True)),
                ('last_booking_date', models.DateTimeField(blank=True, help_text='Date of most recent booking', null=True)),
                ('notes', models.TextField(blank=True, help_text="Provider's private notes about this customer", null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(help_text='Customer in this relationship', limit_choices_to={'role': 'customer'}, on_delete=django.db.models.deletion.CASCADE, related_name='provider_relations', to=settings.AUTH_USER_MODEL)),
                ('provider', models.ForeignKey(help_text='Provider in this relationship', limit_choices_to={'role': 'provider'}, on_delete=django.db.models.deletion.CASCADE, related_name='customer_relations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Provider-Customer Relation',
                'verbose_name_plural': 'Provider-Customer Relations',
                'ordering': ['-last_booking_date'],
                'indexes': [models.Index(fields=['provider', 'is_blocked'], name='bookings_pr_provide_1ee4db_idx'), models.Index(fields=['provider', 'is_favorite_customer'], name='bookings_pr_provide_df3dec_idx'), models.Index(fields=['last_booking_date'], name='bookings_pr_last_bo_a0bde5_idx')],
                'unique_together': {('provider', 'customer')},
            },
        ),
        migrations.CreateModel(
            name='ProviderAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date for this analytics record')),
                ('bookings_count', models.PositiveIntegerField(default=0, help_text='Total bookings on this date')),
                ('confirmed_bookings', models.PositiveIntegerField(default=0, help_text='Confirmed bookings on this date')),
                ('completed_bookings', models.PositiveIntegerField(default=0, help_text='Completed bookings on this date')),
                ('cancelled_bookings', models.PositiveIntegerField(default=0, help_text='Cancelled bookings on this date')),
                ('gross_revenue', models.DecimalField(decimal_places=2, default=0, help_text='Total gross revenue for this date', max_digits=10)),
                ('net_revenue', models.DecimalField(decimal_places=2, default=0, help_text='Net revenue after platform fees', max_digits=10)),
                ('platform_fees', models.DecimalField(decimal_places=2, default=0, help_text='Platform fees deducted', max_digits=10)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0, help_text='Average rating received on this date', max_digits=3)),
                ('response_time_hours', models.DecimalField(decimal_places=2, default=0, help_text='Average response time to bookings in hours', max_digits=5)),
                ('completion_rate', models.DecimalField(decimal_places=2, default=0, help_text='Percentage of bookings completed successfully', max_digits=5)),
                ('new_customers', models.PositiveIntegerField(default=0, help_text='New customers served on this date')),
                ('returning_customers', models.PositiveIntegerField(default=0, help_text='Returning customers served on this date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('provider', models.ForeignKey(help_text='Provider this analytics record belongs to', limit_choices_to={'role': 'provider'}, on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Provider Analytics',
                'verbose_name_plural': 'Provider Analytics',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['provider', 'date'], name='bookings_pr_provide_c918c3_idx'), models.Index(fields=['date'], name='bookings_pr_date_952b7e_idx')],
                'unique_together': {('provider', 'date')},
            },
        ),
    ]
