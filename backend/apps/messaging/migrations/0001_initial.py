# Generated by Django 4.2.10 on 2025-10-02 10:23

import apps.messaging.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('services', '0006_remove_deprecated_image_field'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_message_at', models.DateTimeField(blank=True, null=True)),
                ('last_message_preview', models.TextField(blank=True, help_text='Preview of the last message for conversation lists', max_length=100)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this conversation is active')),
                ('provider_archived', models.BooleanField(default=False, help_text='Whether provider has archived this conversation')),
                ('customer_archived', models.BooleanField(default=False, help_text='Whether customer has archived this conversation')),
                ('unread_count_provider', models.PositiveIntegerField(default=0, help_text='Number of unread messages for provider')),
                ('unread_count_customer', models.PositiveIntegerField(default=0, help_text='Number of unread messages for customer')),
                ('customer', models.ForeignKey(help_text='The customer in this conversation', limit_choices_to={'role': 'customer'}, on_delete=django.db.models.deletion.CASCADE, related_name='customer_conversations', to=settings.AUTH_USER_MODEL)),
                ('provider', models.ForeignKey(help_text='The service provider in this conversation', limit_choices_to={'role': 'provider'}, on_delete=django.db.models.deletion.CASCADE, related_name='provider_conversations', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(help_text='The service this conversation is about', on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='services.service')),
            ],
            options={
                'verbose_name': 'Conversation',
                'verbose_name_plural': 'Conversations',
                'ordering': ['-last_message_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('text', 'Text Message'), ('image', 'Image'), ('file', 'File Attachment'), ('system', 'System Message')], default='text', max_length=20)),
                ('text', models.TextField(blank=True, help_text='Text content of the message')),
                ('attachment', models.FileField(blank=True, help_text='File attachment (images, PDFs, documents)', null=True, upload_to=apps.messaging.models.message_attachment_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif', 'pdf', 'doc', 'docx'])])),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read')], default='sent', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_by', models.JSONField(default=list, help_text='List of user IDs who have deleted this message')),
                ('is_flagged', models.BooleanField(default=False, help_text='Whether this message has been flagged for review')),
                ('moderation_reason', models.CharField(blank=True, help_text='Reason for flagging this message', max_length=100)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='messaging.conversation')),
                ('sender', models.ForeignKey(help_text='User who sent this message', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MessageReadStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_statuses', to='messaging.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Message Read Status',
                'verbose_name_plural': 'Message Read Statuses',
                'indexes': [models.Index(fields=['message', 'user'], name='messaging_m_message_4127cd_idx')],
                'unique_together': {('message', 'user')},
            },
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['conversation', '-created_at'], name='messaging_m_convers_516edb_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sender', '-created_at'], name='messaging_m_sender__9b0bb2_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['provider', '-last_message_at'], name='messaging_c_provide_9de0d8_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['customer', '-last_message_at'], name='messaging_c_custome_770dc2_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['service', 'provider', 'customer'], name='messaging_c_service_4a6628_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='conversation',
            unique_together={('service', 'provider', 'customer')},
        ),
    ]
